{% doc %}
  @prompt
    Create an interactive video section with clickable video thumbnails that play when clicked, a customizable heading title with paragraph text input, and position settings (left, center, right) for the heading alignment, i went to select video not from url

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-video-section-{{ ai_gen_id }} {
    padding: 40px 20px;
    background-color: {{ block.settings.background_color }};
  }

  .ai-video-section__container-{{ ai_gen_id }} {
    max-width: 1200px;
    margin: 0 auto;
  }

  .ai-video-section__header-{{ ai_gen_id }} {
    margin-bottom: 40px;
    text-align: {{ block.settings.heading_alignment }};
  }

  .ai-video-section__title-{{ ai_gen_id }} {
    color: {{ block.settings.heading_color }};
    font-size: {{ block.settings.heading_size }}px;
    margin: 0 0 16px 0;
    line-height: 1.2;
  }

  .ai-video-section__description-{{ ai_gen_id }} {
    color: {{ block.settings.text_color }};
    font-size: {{ block.settings.text_size }}px;
    margin: 0;
    line-height: 1.6;
  }

  .ai-video-section__video-grid-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 24px;
  }

  .ai-video-section__video-item-{{ ai_gen_id }} {
    position: relative;
    border-radius: {{ block.settings.video_border_radius }}px;
    overflow: hidden;
    background: #000;
    cursor: pointer;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .ai-video-section__video-item-{{ ai_gen_id }}:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  }

  .ai-video-section__thumbnail-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    aspect-ratio: 16/9;
    overflow: hidden;
  }

  .ai-video-section__thumbnail-image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .ai-video-section__video-item-{{ ai_gen_id }}:hover .ai-video-section__thumbnail-image-{{ ai_gen_id }} {
    transform: scale(1.05);
  }

  .ai-video-section__play-button-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 80px;
    height: 80px;
    background: rgba(255, 255, 255, 0.9);
    border: none;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
  }

  .ai-video-section__play-button-{{ ai_gen_id }}:hover {
    background: rgba(255, 255, 255, 1);
    transform: translate(-50%, -50%) scale(1.1);
  }

  .ai-video-section__play-icon-{{ ai_gen_id }} {
    width: 32px;
    height: 32px;
    color: #000;
    margin-left: 4px;
  }

  .ai-video-section__video-title-{{ ai_gen_id }} {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: linear-gradient(transparent, rgba(0, 0, 0, 0.8));
    color: white;
    padding: 40px 20px 20px;
    font-size: 18px;
    font-weight: 600;
  }

  .ai-video-section__modal-{{ ai_gen_id }} {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.9);
    z-index: 1000;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease;
  }

  .ai-video-section__modal-{{ ai_gen_id }}.active {
    opacity: 1;
    visibility: visible;
  }

  .ai-video-section__modal-content-{{ ai_gen_id }} {
    position: relative;
    width: 90%;
    max-width: 800px;
    aspect-ratio: 16/9;
    background: #000;
    border-radius: 8px;
    overflow: hidden;
  }

  .ai-video-section__modal-video-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
  }

  .ai-video-section__close-button-{{ ai_gen_id }} {
    position: absolute;
    top: -50px;
    right: 0;
    background: none;
    border: none;
    color: white;
    font-size: 24px;
    cursor: pointer;
    padding: 10px;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.1);
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-video-section__close-button-{{ ai_gen_id }}:hover {
    background: rgba(255, 255, 255, 0.2);
  }

  .ai-video-section__placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-video-section__placeholder-{{ ai_gen_id }} svg {
    width: 100%;
    height: 100%;
    max-width: 200px;
    max-height: 200px;
    opacity: 0.5;
  }

  @media screen and (max-width: 768px) {
    .ai-video-section-{{ ai_gen_id }} {
      padding: 30px 16px;
    }

    .ai-video-section__header-{{ ai_gen_id }} {
      margin-bottom: 30px;
    }

    .ai-video-section__video-grid-{{ ai_gen_id }} {
      grid-template-columns: 1fr;
      gap: 20px;
    }

    .ai-video-section__play-button-{{ ai_gen_id }} {
      width: 60px;
      height: 60px;
    }

    .ai-video-section__play-icon-{{ ai_gen_id }} {
      width: 24px;
      height: 24px;
    }

    .ai-video-section__modal-content-{{ ai_gen_id }} {
      width: 95%;
    }
  }
{% endstyle %}

<video-section-{{ ai_gen_id }}
  class="ai-video-section-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-video-section__container-{{ ai_gen_id }}">
    <div class="ai-video-section__header-{{ ai_gen_id }}">
      {% if block.settings.heading != blank %}
        <h2 class="ai-video-section__title-{{ ai_gen_id }}">{{ block.settings.heading }}</h2>
      {% endif %}
      {% if block.settings.description != blank %}
        <div class="ai-video-section__description-{{ ai_gen_id }}">{{ block.settings.description }}</div>
      {% endif %}
    </div>

    <div class="ai-video-section__video-grid-{{ ai_gen_id }}">
      {% for i in (1..3) %}
        {% liquid
          assign video_key = 'video_' | append: i
          assign thumbnail_key = 'thumbnail_' | append: i
          assign title_key = 'video_title_' | append: i
          
          assign video_file = block.settings[video_key]
          assign thumbnail = block.settings[thumbnail_key]
          assign video_title = block.settings[title_key]
        %}

        {% if video_file != blank %}
          <div
            class="ai-video-section__video-item-{{ ai_gen_id }}"
            data-video-file="{{ video_file }}"
            data-video-index="{{ i }}"
          >
            <div class="ai-video-section__thumbnail-{{ ai_gen_id }}">
              {% if thumbnail %}
                <img
                  src="{{ thumbnail | image_url: width: 800 }}"
                  alt="{{ video_title | escape }}"
                  class="ai-video-section__thumbnail-image-{{ ai_gen_id }}"loading="lazy"
                  width="800"
                  height="450"
                >
              {% else %}
                <div class="ai-video-section__placeholder-{{ ai_gen_id }}">
                  {{ 'image' | placeholder_svg_tag }}
                </div>
              {% endif %}

              <button
                class="ai-video-section__play-button-{{ ai_gen_id }}"
                aria-label="Play video: {{ video_title | escape }}"
              >
                <svg
                  class="ai-video-section__play-icon-{{ ai_gen_id }}"
                  viewBox="0 0 24 24"
                  fill="currentColor"
                >
                  <path d="M8 5v14l11-7z"/></svg>
              </button>

              {% if video_title != blank %}
                <div class="ai-video-section__video-title-{{ ai_gen_id }}">
                  {{ video_title }}
                </div>
              {% endif %}
            </div>
          </div>
        {% endif %}
      {% endfor %}
    </div>
  </div>

  <div class="ai-video-section__modal-{{ ai_gen_id }}" role="dialog" aria-modal="true" aria-hidden="true">
    <div class="ai-video-section__modal-content-{{ ai_gen_id }}">
      <button
        class="ai-video-section__close-button-{{ ai_gen_id }}"
        aria-label="Close video"
      >
        Ã—
      </button>
      <video
        class="ai-video-section__modal-video-{{ ai_gen_id }}"
        controls
        preload="none"
      ></video>
    </div>
  </div>
</video-section-{{ ai_gen_id }}>

<script>
  (function() {
    class VideoSection{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.modal = null;
        this.modalVideo = null;
        this.closeButton = null;
        this.videoItems = [];
      }

      connectedCallback() {
        this.modal = this.querySelector('.ai-video-section__modal-{{ ai_gen_id }}');
        this.modalVideo = this.querySelector('.ai-video-section__modal-video-{{ ai_gen_id }}');
        this.closeButton = this.querySelector('.ai-video-section__close-button-{{ ai_gen_id }}');
        this.videoItems = this.querySelectorAll('.ai-video-section__video-item-{{ ai_gen_id }}');

        this.setupEventListeners();
      }

      setupEventListeners() {
        this.videoItems.forEach(item => {
          item.addEventListener('click', (e) => {
            e.preventDefault();
            this.openVideo(item);
          });

          item.addEventListener('keydown', (e) => {
            if (e.key === 'Enter' || e.key === ' ') {
              e.preventDefault();
              this.openVideo(item);
            }
          });
        });

        this.closeButton.addEventListener('click', () => {
          this.closeVideo();
        });

        this.modal.addEventListener('click', (e) => {
          if (e.target === this.modal) {
            this.closeVideo();
          }
        });

        document.addEventListener('keydown', (e) => {
          if (e.key === 'Escape' && this.modal.classList.contains('active')) {
            this.closeVideo();
          }
        });
      }

      openVideo(item) {
        const videoFile = item.dataset.videoFile;
        if (!videoFile) return;

        this.modalVideo.src = videoFile;
        this.modal.classList.add('active');
        this.modal.setAttribute('aria-hidden', 'false');document.body.style.overflow = 'hidden';
        
        this.modalVideo.focus();
      }

      closeVideo() {
        this.modal.classList.remove('active');
        this.modal.setAttribute('aria-hidden', 'true');
        this.modalVideo.src = '';
        this.modalVideo.pause();
        
        document.body.style.overflow = '';
      }
    }

    customElements.define('video-section-{{ ai_gen_id }}', VideoSection{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Interactive Video Section",
  "settings": [
    {
      "type": "header",
      "content": "Section Content"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Featured Videos"
    },
    {
      "type": "textarea",
      "id": "description",
      "label": "Description",
      "default": "Discover our latest video content"
    },
    {
      "type": "select",
      "id": "heading_alignment",
      "label": "Heading alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "header",
      "content": "Video 1"
    },
    {
      "type": "video",
      "id": "video_1",
      "label": "Video file"
    },
    {
      "type": "image_picker",
      "id": "thumbnail_1",
      "label": "Video thumbnail"
    },
    {
      "type": "text",
      "id": "video_title_1",
      "label": "Video title"
    },
    {
      "type": "header",
      "content": "Video 2"
    },
    {
      "type": "video",
      "id": "video_2",
      "label": "Video file"
    },
    {
      "type": "image_picker",
      "id": "thumbnail_2",
      "label": "Video thumbnail"
    },
    {
      "type": "text",
      "id": "video_title_2",
      "label": "Video title"
    },
    {
      "type": "header",
      "content": "Video 3"
    },
    {
      "type": "video",
      "id": "video_3",
      "label": "Video file"
    },
    {
      "type": "image_picker",
      "id": "thumbnail_3",
      "label": "Video thumbnail"
    },
    {
      "type": "text",
      "id": "video_title_3",
      "label": "Video title"
    },
    {
      "type": "header",
      "content": "Style Settings"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#666666"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 20,
      "max": 60,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 32
    },
    {
      "type": "range",
      "id": "text_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Text size",
      "default": 16
    },
    {
      "type": "range",
      "id": "video_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Video border radius",
      "default": 8
    }
  ],
  "presets": [
    {
      "name": "Interactive Video Section"
    }
  ],
  "tag": null
}
{% endschema %}